name: Build and Deploy Container to ACR and Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: moosefactoryuser
      IMAGE_NAME: moosefactoryuser
      ACR_LOGIN_SERVER: moosefactoryuser.azurecr.io
      APP_NAME: MooseFactoryUserManagment
      RESOURCE_GROUP: MooseFactoryUserManagment_group
      
      AZURE_CREDENTIALS: '{
         "clientId": "YOUR_CLIENT_ID",
         "clientSecret": "YOUR_CLIENT_SECRET",
         "subscriptionId": "YOUR_SUBSCRIPTION_ID",
         "tenantId": "YOUR_TENANT_ID",
         "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
         "resourceManagerEndpointUrl": "https://management.azure.com/",
         "activeDirectoryGraphResourceId": "https://graph.windows.net/",
         "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
         "galleryEndpointUrl": "https://gallery.azure.com/",
         "managementEndpointUrl": "https://management.core.windows.net/"
      }'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Build Docker Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:latest .

      - name: Push Docker Image to ACR
        run: |
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest

      - name: Deploy to Azure App Service using the Container Image
        run: |
          az webapp config container set \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --docker-custom-image-name $ACR_LOGIN_SERVER/$IMAGE_NAME:latest \
            --docker-registry-server-url https://$ACR_LOGIN_SERVER
          az webapp restart --name $APP_NAME --resource-group $RESOURCE_GROUP
